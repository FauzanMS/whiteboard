{"version":3,"sources":["lib/components/WhiteBoard/index.module.scss","lib/components/PdfReader/index.module.scss","app.module.scss","lib/components/PdfReader/index.jsx","lib/components/WhiteBoard/index.js","lib/components/WhiteBoard/images/remove.svg","lib/components/WhiteBoard/cursors.js","lib/components/WhiteBoard/images/select.svg","lib/components/WhiteBoard/images/eraser.svg","lib/components/WhiteBoard/images/text.svg","lib/components/WhiteBoard/images/rectangle.svg","lib/components/WhiteBoard/images/line.svg","lib/components/WhiteBoard/images/ellipse.svg","lib/components/WhiteBoard/images/triangle.svg","lib/components/WhiteBoard/images/pencil.svg","lib/components/WhiteBoard/images/delete.svg","App.js","index.js"],"names":["module","exports","pdfjs","GlobalWorkerOptions","workerSrc","version","origX","origY","PDFReader","fileReaderInfo","updateFileReaderInfo","savePage","changePage","offset","currentPageNumber","className","styles","pdfReader","fileContainer","document","file","onLoadSuccess","numPages","totalPages","onLoadProgress","loaded","total","console","log","onRenderSuccess","pdfAsImageSrc","querySelector","toDataURL","currentPage","pageNumber","pageInfo","type","disabled","onClick","getCursor","removeCursor","drawInstance","mouseDown","options","currentMode","currentColor","currentWidth","fill","group","modes","RECTANGLE","TRIANGLE","ELLIPSE","LINE","PENCIL","ERASER","removeObject","canvas","e","remove","target","stopDrawing","removeCanvasListener","off","createLine","on","pointer","getPointer","fabric","Line","x","y","strokeWidth","stroke","selectable","add","requestRenderAll","startAddLine","set","x2","y2","setCoords","startDrawingLine","selection","hoverCursor","isDrawingMode","getObjects","map","item","discardActiveObject","createRect","Rect","left","top","width","height","startAddRect","Math","abs","renderAll","startDrawingRect","createEllipse","Ellipse","cornerSize","objectCaching","startAddEllipse","rx","ry","startDrawingEllipse","createTriangle","Triangle","startAddTriangle","startDrawingTriangle","Whiteboard","aspectRatio","setFiles","useState","setCanvas","brushWidth","setBrushWidth","isFill","setIsFill","setFileReaderInfo","canvasRef","useRef","whiteboardRef","uploadImageRef","uploadPdfRef","useEffect","current","Canvas","Object","prototype","transparentCorners","cornerStyle","borderColor","cornerColor","padding","borderDashArray","path","initCanvas","clientWidth","callback","whiteboard","ratio","getWidth","getHeight","whiteboardWidth","scale","zoom","getZoom","setDimensions","setViewportTransform","resizeCanvas","ResizeObserver","observe","center","getCenter","Image","fromURL","img","scaleToHeight","setBackgroundImage","bind","originX","originY","pages","setPages","backUpCanvas","setBackUpCanvas","savePages","toBlob","blob","forEach","backgroundImage","React","pdfViewer","setPdfViewer","data","ref","toolbar","src","LineIcon","alt","RectangleIcon","EllipseIcon","TriangleIcon","freeDrawingBrush","parseInt","draw","PencilIcon","text","Textbox","editable","createText","TextIcon","onSelectMode","SelectIcon","changeToErasingMode","EraserIcon","clearCanvas","DeleteIcon","name","id","checked","onChange","htmlFor","min","max","step","value","intValue","uploadDropdown","accept","reader","FileReader","files","addEventListener","result","readAsDataURL","event","dropdownButton","dropdownContent","click","PdfReader","App","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0f1785e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteboard\":\"WhiteBoard_whiteboard__3PMpc\",\"toolbar\":\"WhiteBoard_toolbar__3kTEu\",\"dropdownButton\":\"WhiteBoard_dropdownButton__XgpWD\",\"uploadDropdown\":\"WhiteBoard_uploadDropdown__1u8Bg\",\"dropdownContent\":\"WhiteBoard_dropdownContent__oAziG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pdfReader\":\"PdfReader_pdfReader__3P8qq\",\"fileContainer\":\"PdfReader_fileContainer__2gJs-\",\"pageInfo\":\"PdfReader_pageInfo__27lCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3mk8F\"};","import React from 'react';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport { pdfjs } from 'react-pdf';\nimport styles from './index.module.scss';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PDFReader = ({ fileReaderInfo, updateFileReaderInfo, savePage }) => {\n  function onRenderSuccess() {\n    const importPDFCanvas = document.querySelector('.import-pdf-page canvas');\n    const pdfAsImageSrc = importPDFCanvas.toDataURL();\n\n    updateFileReaderInfo({ currentPage: pdfAsImageSrc });\n  }\n\n  function onDocumentLoadSuccess({ numPages }) {\n    updateFileReaderInfo({ totalPages: numPages });\n  }\n\n  function changePage(offset) {\n    updateFileReaderInfo({ currentPageNumber: fileReaderInfo.currentPageNumber + offset });\n  }\n\n  const nextPage = () => {\n    changePage(1);\n    savePage();\n  };\n  const previousPage = () => changePage(-1);\n\n  return (\n    <div className={styles.pdfReader}>\n      <div className={styles.fileContainer}>\n        <Document\n          className={styles.document}\n          file={fileReaderInfo.file}\n          onLoadSuccess={onDocumentLoadSuccess}\n          onLoadProgress={({ loaded, total }) =>\n            console.log('Loading a document: ' + (loaded / total) * 100 + '%')\n          }\n        >\n          <Page\n            className=\"import-pdf-page\"\n            onRenderSuccess={onRenderSuccess}\n            pageNumber={fileReaderInfo.currentPageNumber}\n          />\n        </Document>\n      </div>\n      <div className={styles.pageInfo}>\n        <span>\n          Page {fileReaderInfo.currentPageNumber} of {fileReaderInfo.totalPages || '--'}\n        </span>\n        {/* <button\n          type=\"button\"\n          disabled={fileReaderInfo.currentPageNumber <= 1}\n          onClick={previousPage}\n        >\n          Previous\n        </button> */}\n        <button\n          type=\"button\"\n          disabled={fileReaderInfo.currentPageNumber >= fileReaderInfo.totalPages}\n          onClick={nextPage}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PDFReader;\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fabric } from 'fabric';\nimport PdfReader from '../PdfReader';\nimport { saveAs } from 'file-saver';\nimport getCursor from './cursors';\nimport SelectIcon from './images/select.svg';\nimport EraserIcon from './images/eraser.svg';\nimport TextIcon from './images/text.svg';\nimport RectangleIcon from './images/rectangle.svg';\nimport LineIcon from './images/line.svg';\nimport EllipseIcon from './images/ellipse.svg';\nimport TriangleIcon from './images/triangle.svg';\nimport PencilIcon from './images/pencil.svg';\nimport DeleteIcon from './images/delete.svg';\n\nimport './eraserBrush';\n\nimport styles from './index.module.scss';\n\nlet drawInstance = null;\nlet origX;\nlet origY;\nlet mouseDown = false;\n\nconst options = {\n  currentMode: '',\n  currentColor: '#000000',\n  currentWidth: 5,\n  fill: false,\n  group: {},\n};\n\nconst modes = {\n  RECTANGLE: 'RECTANGLE',\n  TRIANGLE: 'TRIANGLE',\n  ELLIPSE: 'ELLIPSE',\n  LINE: 'LINE',\n  PENCIL: 'PENCIL',\n  ERASER: 'ERASER',\n};\n\nconst initCanvas = (width, height) => {\n  const canvas = new fabric.Canvas('canvas', { height, width });\n  fabric.Object.prototype.transparentCorners = false;\n  fabric.Object.prototype.cornerStyle = 'circle';\n  fabric.Object.prototype.borderColor = '#4447A9';\n  fabric.Object.prototype.cornerColor = '#4447A9';\n  fabric.Object.prototype.cornerSize = 6;\n  fabric.Object.prototype.padding = 10;\n  fabric.Object.prototype.borderDashArray = [5, 5];\n\n  canvas.on('object:added', (e) => {\n    e.target.on('mousedown', removeObject(canvas));\n  });\n  canvas.on('path:created', (e) => {\n    e.path.on('mousedown', removeObject(canvas));\n  });\n\n  return canvas;\n};\n\nfunction removeObject(canvas) {\n  return (e) => {\n    if (options.currentMode === modes.ERASER) {\n      canvas.remove(e.target);\n    }\n  };\n}\n\nfunction stopDrawing() {\n  mouseDown = false;\n}\n\nfunction removeCanvasListener(canvas) {\n  canvas.off('mouse:down');\n  canvas.off('mouse:move');\n  canvas.off('mouse:up');\n}\n\n/*  ==== line  ==== */\nfunction createLine(canvas) {\n  if (modes.currentMode !== modes.LINE) {\n    options.currentMode = modes.LINE;\n\n    removeCanvasListener(canvas);\n    canvas.on('mouse:down', startAddLine(canvas));\n    canvas.on('mouse:move', startDrawingLine(canvas));\n    canvas.on('mouse:up', stopDrawing);\n\n    canvas.selection = false;\n    canvas.hoverCursor = 'auto';\n    canvas.isDrawingMode = false;\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\n    canvas.discardActiveObject().requestRenderAll();\n  }\n}\n\nfunction startAddLine(canvas) {\n  return ({ e }) => {\n    mouseDown = true;\n\n    let pointer = canvas.getPointer(e);\n    drawInstance = new fabric.Line([pointer.x, pointer.y, pointer.x, pointer.y], {\n      strokeWidth: options.currentWidth,\n      stroke: options.currentColor,\n      selectable: false,\n    });\n\n    canvas.add(drawInstance);\n    canvas.requestRenderAll();\n  };\n}\n\nfunction startDrawingLine(canvas) {\n  return ({ e }) => {\n    if (mouseDown) {\n      const pointer = canvas.getPointer(e);\n      drawInstance.set({\n        x2: pointer.x,\n        y2: pointer.y,\n      });\n      drawInstance.setCoords();\n      canvas.requestRenderAll();\n    }\n  };\n}\n\n/* ==== rectangle ==== */\nfunction createRect(canvas) {\n  if (options.currentMode !== modes.RECTANGLE) {\n    options.currentMode = modes.RECTANGLE;\n\n    removeCanvasListener(canvas);\n\n    canvas.on('mouse:down', startAddRect(canvas));\n    canvas.on('mouse:move', startDrawingRect(canvas));\n    canvas.on('mouse:up', stopDrawing);\n\n    canvas.selection = false;\n    canvas.hoverCursor = 'auto';\n    canvas.isDrawingMode = false;\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\n    canvas.discardActiveObject().requestRenderAll();\n  }\n}\n\nfunction startAddRect(canvas) {\n  return ({ e }) => {\n    mouseDown = true;\n\n    const pointer = canvas.getPointer(e);\n    origX = pointer.x;\n    origY = pointer.y;\n\n    drawInstance = new fabric.Rect({\n      stroke: options.currentColor,\n      strokeWidth: options.currentWidth,\n      fill: options.fill ? options.currentColor : 'transparent',\n      left: origX,\n      top: origY,\n      width: 0,\n      height: 0,\n      selectable: false,\n    });\n\n    canvas.add(drawInstance);\n\n    drawInstance.on('mousedown', (e) => {\n      if (options.currentMode === modes.ERASER) {\n        console.log('刪除', e);\n        canvas.remove(e.target);\n      }\n    });\n  };\n}\n\nfunction startDrawingRect(canvas) {\n  return ({ e }) => {\n    if (mouseDown) {\n      const pointer = canvas.getPointer(e);\n\n      if (pointer.x < origX) {\n        drawInstance.set('left', pointer.x);\n      }\n      if (pointer.y < origY) {\n        drawInstance.set('top', pointer.y);\n      }\n      drawInstance.set({\n        width: Math.abs(pointer.x - origX),\n        height: Math.abs(pointer.y - origY),\n      });\n      drawInstance.setCoords();\n      canvas.renderAll();\n    }\n  };\n}\n\n/* ==== Ellipse ==== */\nfunction createEllipse(canvas) {\n  if (options.currentMode !== modes.ELLIPSE) {\n    options.currentMode = modes.ELLIPSE;\n\n    removeCanvasListener(canvas);\n\n    canvas.on('mouse:down', startAddEllipse(canvas));\n    canvas.on('mouse:move', startDrawingEllipse(canvas));\n    canvas.on('mouse:up', stopDrawing);\n\n    canvas.selection = false;\n    canvas.hoverCursor = 'auto';\n    canvas.isDrawingMode = false;\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\n    canvas.discardActiveObject().requestRenderAll();\n  }\n}\n\nfunction startAddEllipse(canvas) {\n  return ({ e }) => {\n    mouseDown = true;\n\n    const pointer = canvas.getPointer(e);\n    origX = pointer.x;\n    origY = pointer.y;\n    drawInstance = new fabric.Ellipse({\n      stroke: options.currentColor,\n      strokeWidth: options.currentWidth,\n      fill: options.fill ? options.currentColor : 'transparent',\n      left: origX,\n      top: origY,\n      cornerSize: 7,\n      objectCaching: false,\n      selectable: false,\n    });\n\n    canvas.add(drawInstance);\n  };\n}\n\nfunction startDrawingEllipse(canvas) {\n  return ({ e }) => {\n    if (mouseDown) {\n      const pointer = canvas.getPointer(e);\n      if (pointer.x < origX) {\n        drawInstance.set('left', pointer.x);\n      }\n      if (pointer.y < origY) {\n        drawInstance.set('top', pointer.y);\n      }\n      drawInstance.set({\n        rx: Math.abs(pointer.x - origX) / 2,\n        ry: Math.abs(pointer.y - origY) / 2,\n      });\n      drawInstance.setCoords();\n      canvas.renderAll();\n    }\n  };\n}\n\n/* === triangle === */\nfunction createTriangle(canvas) {\n  removeCanvasListener(canvas);\n\n  canvas.on('mouse:down', startAddTriangle(canvas));\n  canvas.on('mouse:move', startDrawingTriangle(canvas));\n  canvas.on('mouse:up', stopDrawing);\n\n  canvas.selection = false;\n  canvas.hoverCursor = 'auto';\n  canvas.isDrawingMode = false;\n  canvas.getObjects().map((item) => item.set({ selectable: false }));\n  canvas.discardActiveObject().requestRenderAll();\n}\n\nfunction startAddTriangle(canvas) {\n  return ({ e }) => {\n    mouseDown = true;\n    options.currentMode = modes.TRIANGLE;\n\n    const pointer = canvas.getPointer(e);\n    origX = pointer.x;\n    origY = pointer.y;\n    drawInstance = new fabric.Triangle({\n      stroke: options.currentColor,\n      strokeWidth: options.currentWidth,\n      fill: options.fill ? options.currentColor : 'transparent',\n      left: origX,\n      top: origY,\n      width: 0,\n      height: 0,\n      selectable: false,\n    });\n\n    canvas.add(drawInstance);\n  };\n}\n\nfunction startDrawingTriangle(canvas) {\n  return ({ e }) => {\n    if (mouseDown) {\n      const pointer = canvas.getPointer(e);\n      if (pointer.x < origX) {\n        drawInstance.set('left', pointer.x);\n      }\n      if (pointer.y < origY) {\n        drawInstance.set('top', pointer.y);\n      }\n      drawInstance.set({\n        width: Math.abs(pointer.x - origX),\n        height: Math.abs(pointer.y - origY),\n      });\n\n      drawInstance.setCoords();\n      canvas.renderAll();\n    }\n  };\n}\n\nfunction createText(canvas) {\n  removeCanvasListener(canvas);\n\n  canvas.isDrawingMode = false;\n\n  const text = new fabric.Textbox('text', {\n    left: 100,\n    top: 100,\n    fill: options.currentColor,\n    editable: true,\n  });\n\n  canvas.add(text);\n  canvas.renderAll();\n}\n\nfunction changeToErasingMode(canvas) {\n  if (options.currentMode !== modes.ERASER) {\n    removeCanvasListener(canvas);\n\n    canvas.isDrawingMode = false;\n\n    options.currentMode = modes.ERASER;\n    canvas.hoverCursor = `url(${getCursor({ type: 'eraser' })}), default`;\n  }\n}\n\nfunction onSelectMode(canvas) {\n  options.currentMode = '';\n  canvas.isDrawingMode = false;\n\n  removeCanvasListener(canvas);\n\n  canvas.getObjects().map((item) => item.set({ selectable: true }));\n  canvas.hoverCursor = 'all-scroll';\n}\n\nfunction clearCanvas(canvas) {\n  canvas.getObjects().forEach((item) => {\n    if (item !== canvas.backgroundImage) {\n      canvas.remove(item);\n    }\n  });\n}\nfunction canvasToJson(canvas) {\n  alert(JSON.stringify(canvas.toJSON()));\n}\n\nfunction draw(canvas) {\n  if (options.currentMode !== modes.PENCIL) {\n    removeCanvasListener(canvas);\n\n    options.currentMode = modes.PENCIL;\n    // canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\n    canvas.freeDrawingBrush.width = parseInt(options.currentWidth, 10) || 1;\n    canvas.isDrawingMode = true;\n  }\n}\n\nfunction handleResize(callback) {\n  const resize_ob = new ResizeObserver(callback);\n\n  return resize_ob;\n}\n\nfunction resizeCanvas(canvas, whiteboard) {\n  return () => {\n    const ratio = canvas.getWidth() / canvas.getHeight();\n    const whiteboardWidth = whiteboard.clientWidth;\n\n    const scale = whiteboardWidth / canvas.getWidth();\n    const zoom = canvas.getZoom() * scale;\n    canvas.setDimensions({ width: whiteboardWidth, height: whiteboardWidth / ratio });\n    canvas.setViewportTransform([zoom, 0, 0, zoom, 0, 0]);\n  };\n}\n\nconst Whiteboard = ({ aspectRatio = 4 / 3 , setFiles }) => {\n  const [canvas, setCanvas] = useState(null);\n  const [brushWidth, setBrushWidth] = useState(5);\n  const [isFill, setIsFill] = useState(false);\n  const [fileReaderInfo, setFileReaderInfo] = useState({\n    file: '',\n    totalPages: null,\n    currentPageNumber: 1,\n    currentPage: '',\n  });\n  var canvasRef = useRef(null);\n  const whiteboardRef = useRef(null);\n  const uploadImageRef = useRef(null);\n  const uploadPdfRef = useRef(null);\n\n  useEffect(() => {\n    if (!canvas && canvasRef.current) {\n      const canvas = initCanvas(\n        whiteboardRef.current.clientWidth,\n        whiteboardRef.current.clientWidth / aspectRatio,\n      );\n      setCanvas(() => canvas);\n\n      handleResize(resizeCanvas(canvas, whiteboardRef.current)).observe(whiteboardRef.current);\n    }\n  }, [canvasRef]);\n\n  useEffect(() => {\n    if (canvas) {\n      const center = canvas.getCenter();\n      fabric.Image.fromURL(fileReaderInfo.currentPage, (img) => {\n        img.scaleToHeight(canvas.height);\n        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas), {\n          top: center.top,\n          left: center.left,\n          originX: 'center',\n          originY: 'center',\n        });\n\n        canvas.renderAll();\n      });\n    }\n  }, [fileReaderInfo.currentPage]);\n\n  function uploadImage(e) {\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.addEventListener('load', () => {\n      fabric.Image.fromURL(reader.result, (img) => {\n        img.scaleToHeight(canvas.height);\n        canvas.add(img);\n      });\n    });\n\n    reader.readAsDataURL(file);\n  }\n\n  function changeCurrentWidth(e) {\n    const intValue = parseInt(e.target.value);\n    options.currentWidth = intValue;\n    canvas.freeDrawingBrush.width = intValue;\n    setBrushWidth(() => intValue);\n  }\n\n  function changeCurrentColor(e) {\n    options.currentColor = e.target.value;\n    canvas.freeDrawingBrush.color = e.target.value;\n  }\n\n  function changeFill(e) {\n    options.fill = e.target.checked;\n    setIsFill(() => e.target.checked);\n  }\n\n  const [pages, setPages] = useState([]); \n  const [index, setIndex] = useState(0);\n\n  const [backUpCanvas, setBackUpCanvas] = useState([]);\n\n  function onSaveCanvasAsImage() {\n    canvasRef.current.toBlob(function (blob) {\n      setFiles([...pages, blob]);\n      setPages([...pages, blob]);\n      // for(let i=0; i<pages.length;i++)\n      //   saveAs(pages[i], \"im.png\");\n      //   saveAs(blob, \"im.png\");\n    });\n    canvas.getObjects().forEach((item) => {\n      if (item !== canvas.backgroundImage) {\n        canvas.remove(item);\n      }\n    })\n    setPages([]);\n    updateFileReaderInfo({ file: \"\", currentPageNumber: 1 });\n    \n  }\n\n  function savePages(canvas) {\n    setBackUpCanvas([...backUpCanvas, canvasRef]);\n    canvasRef.current.toBlob(function (blob) {\n      setPages([...pages, blob]);\n      canvas.getObjects().forEach((item) => {\n        if (item !== canvas.backgroundImage) {\n          canvas.remove(item);\n        }\n      })\n    });\n  }\n\n  function onFileChange(event) {\n    updateFileReaderInfo({ file: event.target.files[0], currentPageNumber: 1 });\n  }\n\n  const [pdfViewer, setPdfViewer] = React.useState(false);\n\n  function updateFileReaderInfo(data) {\n    setFileReaderInfo({ ...fileReaderInfo, ...data });\n  }\n\n  return (\n    <div ref={whiteboardRef} className={styles.whiteboard}>\n      <div className={styles.toolbar}>\n        <button type=\"button\" onClick={() => createLine(canvas)}>\n          <img src={LineIcon} alt=\"line\" />\n        </button>\n        <button type=\"button\" onClick={() => createRect(canvas)}>\n          <img src={RectangleIcon} alt=\"Rectangle\" />\n        </button>\n        <button type=\"button\" onClick={() => createEllipse(canvas)}>\n          <img src={EllipseIcon} alt=\"Ellipse\" />\n        </button>\n        <button type=\"button\" onClick={() => createTriangle(canvas, options)}>\n          <img src={TriangleIcon} alt=\"Triangle\" />\n        </button>\n        <button type=\"button\" onClick={() => draw(canvas)}>\n          <img src={PencilIcon} alt=\"Pencil\" />\n        </button>\n        <button type=\"button\" onClick={() => createText(canvas)}>\n          <img src={TextIcon} alt=\"Text\" />\n        </button>\n        <button type=\"button\" onClick={() => onSelectMode(canvas)}>\n          <img src={SelectIcon} alt=\"Selection mode\" />\n        </button>\n        <button type=\"button\" onClick={() => changeToErasingMode(canvas)}>\n          <img src={EraserIcon} alt=\"Eraser\" />\n        </button>\n        <button type=\"button\" onClick={() => clearCanvas(canvas)}>\n          <img src={DeleteIcon} alt=\"Delete\" />\n        </button>\n        <div>\n          <input type=\"checkbox\" name=\"fill\" id=\"fill\" checked={isFill} onChange={changeFill} />\n          <label htmlFor=\"fill\">fill</label>\n        </div>\n\n        <input\n          type=\"range\"\n          min={1}\n          max={20}\n          step={1}\n          value={brushWidth}\n          onChange={changeCurrentWidth}\n        />\n        <div className={styles.uploadDropdown}>\n          <input ref={uploadImageRef} accept=\"image/*\" type=\"file\" onChange={uploadImage} />\n          <input ref={uploadPdfRef} accept=\".pdf\" type=\"file\" onChange={onFileChange} />\n          <button className={styles.dropdownButton}>+Upload</button>\n          <div className={styles.dropdownContent}>\n            <span onClick={() => uploadImageRef.current.click()}>Image</span>\n            <span onClick={() => {uploadPdfRef.current.click(); setPdfViewer(true)}}>PDF</span>\n          </div>\n        </div>\n\n        <button onClick={onSaveCanvasAsImage}>Save as image</button>\n      </div>\n      <canvas ref={canvasRef} id=\"canvas\" />\n      <div>\n        {/* <button>Previous</button> */}\n       {!pdfViewer && <button onClick={() => savePages(canvas)}>Next</button>}\n      </div>\n      <div>\n        {pdfViewer && <PdfReader savePage={() => savePages(canvas)} fileReaderInfo={fileReaderInfo} updateFileReaderInfo={updateFileReaderInfo} />}\n      </div>\n    </div>\n  );\n};\n\nWhiteboard.propTypes = {\n  aspectRatio: PropTypes.number,\n  setFiles: PropTypes.any,\n};\n\nexport default Whiteboard;\n","export default __webpack_public_path__ + \"static/media/remove.30a74efc.svg\";","import removeCursor from './images/remove.svg';\n\nconst getCursor = ({ type }) => {\n  switch (type) {\n    case 'eraser': {\n      return removeCursor;\n    }\n\n    default: {\n      return '';\n    }\n  }\n};\n\nexport default getCursor;\n","export default __webpack_public_path__ + \"static/media/select.ad97be73.svg\";","export default __webpack_public_path__ + \"static/media/eraser.6834b010.svg\";","export default __webpack_public_path__ + \"static/media/text.abecf614.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.55957e34.svg\";","export default __webpack_public_path__ + \"static/media/line.8231e012.svg\";","export default __webpack_public_path__ + \"static/media/ellipse.8c29c164.svg\";","export default __webpack_public_path__ + \"static/media/triangle.58a0a70e.svg\";","export default __webpack_public_path__ + \"static/media/pencil.eda8d85b.svg\";","export default __webpack_public_path__ + \"static/media/delete.f634ca67.svg\";","import React from 'react';\nimport { Whiteboard } from './lib';\nimport styles from './app.module.scss';\n\nconst App = () => {\n  const [files, setFiles] = React.useState([]);\n  React.useEffect(()=>{\n    console.log(files,\"Nieee\");\n  },[files]);\n  return (\n    <div className={styles.app}>\n      <main>\n        <Whiteboard aspectRatio={4 / 3} setFiles={setFiles} />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}